@page
@model CleanArchitecture.ClientWeb.Pages.AboutModel
@{
    ViewData["Title"] = "About";
}

<div class="row">
    <div class="col-md-12">
        <h2>The motivation behind it all</h2>
        <p>What is the point of all this? Well, besides showcasing Bob Ross... I thought it would be clever to have a "real world" application to refrence when talking architecture. I want something to set a standard, something to clone, something to utilize in all my next .Net Core projects. Like all software (and wine), this will improve with time.</p>
        <h2>Key Points:</h2>
        <h4>N-Tier Architecture</h4>
        <p>A 3 layered approach, to set us up for multiple UI's that use the same core business functionality/backend.&nbsp;</p>
        <h4>Separation of Concerns</h4>
        <p>Closely related to the <a href="http://deviq.com/single-responsibility-principle/">"Single Responsibility"</a> principle, Separation of Concerns (SoC) makes your code more maintainable, by not co-locating ideas. When things change, SoC will help ensure your changes are limited to your featureset, and not spread throughout your application.&nbsp;</p>
        <h4>No Leaky Abstractions</h4>
        <p>By using interfaces, we can avoid leaky abstractions, and have better control of how our code is used. On the contrary, consumers of our code don't have to know the implimentation details.</p>
        <h4>Testable</h4>
        <h4>Modular</h4>
        <h4>Maintainable&nbsp;</h4>
    </div>
</div>